{"version":3,"sources":["./src/app/pages/auth/banners/add-edit/add-edit.component.ts","./src/app/pages/auth/banners/add-edit/add-edit.component.html","./src/app/pages/auth/banners/banners-routing.module.ts","./src/app/pages/auth/banners/banners.component.html","./src/app/pages/auth/banners/banners.component.ts","./src/app/pages/auth/banners/banners.module.ts","./src/app/services/auth/banner/banner.service.ts"],"names":[],"mappings":"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","file":"286.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AlertService} from '../../../../services/alert/alert.service';\nimport {IBanner} from '../../../../interfaces/IBanner';\nimport {BannerService} from '../../../../services/auth/banner/banner.service';\nimport {TokenHelper} from '../../../../helpers/TokenHelper';\nimport {IFile} from '../../../../interfaces/IFile';\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.component.html',\n  styleUrls: ['./add-edit.component.scss']\n})\nexport class AddEditComponent implements OnInit {\n    public formGroup: FormGroup;\n    public loading: boolean;\n    public error: string;\n    public id: number = null;\n    public token: string = TokenHelper.generate();\n\n    constructor(\n      private formBuilder: FormBuilder = null,\n      private router: Router,\n      private activatedRoute: ActivatedRoute,\n      private alertService: AlertService,\n      private bannerService: BannerService\n    ) {\n        this.formGroup = this.formBuilder.group({\n            request_token: [this.token],\n            id: [null],\n            name: [null, [Validators.required, Validators.maxLength(255)]],\n            slug: [null],\n            banners: this.formBuilder.array([])\n        });\n    }\n\n    public get banners() {\n        return this.formGroup.get('banners') as FormArray;\n    }\n\n    public ngOnInit(): void {\n        this.id = this.activatedRoute.snapshot.params.id;\n        if (this.id) {\n            this.get();\n        }\n    }\n\n    public submit() {\n        if (this.loading) {\n            return;\n        }\n        if (this.id) {\n            this.update();\n        } else {\n            this.store();\n        }\n    }\n\n    private store() {\n        this.loading = true;\n        this.bannerService\n            .store(this.formGroup.value)\n            .subscribe((response) => {\n                this.router.navigate(['/', 'auth', 'banners'])\n                this.alertService.toast(response.message);\n            }, error => {\n                this.alertService.treatError(error)\n            })\n            .add(() => this.loading = false);\n    }\n    private update() {\n        this.loading = true;\n        this.bannerService\n            .update(this.formGroup.value)\n            .subscribe((response) => {\n                this.router.navigate(['/', 'auth', 'banners'])\n                this.alertService.toast(response.message);\n            }, error => {\n                this.alertService.treatError(error)\n            })\n            .add(() => this.loading = false);\n    }\n\n    private get() {\n        this.loading = true;\n        this.bannerService\n            .get(this.id)\n            .subscribe((response) => {\n                this.formGroup.patchValue(response);\n                response.banners.forEach(banner => this.addBanner(banner))\n            })\n            .add(() => this.loading = false);\n    }\n\n    public addBanner(banner?: IBanner) {\n        this.banners.push(\n            this.formBuilder.group({\n                id: [banner?.id],\n                // @ts-ignore\n                file_id: [banner?.file?.id],\n                name: [banner?.name, [Validators.required, Validators.maxLength(255)]],\n                content: [banner?.content],\n            })\n        );\n    }\n\n    public fileUploaded(i: number, file: IFile) {\n        this.banners.at(i).patchValue({\n            file_id: file.id,\n        });\n    }\n\n    public removeBanner(i: number) {\n        this.banners.removeAt(i);\n    }\n}\n","<mat-progress-bar class=\"progress\" *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n    <h1>{{ id ? 'Editar' : 'Adicionar' }} Banner</h1>\n    <button (click)=\"submit()\" color=\"primary\" mat-flat-button>\n        <i class=\"mdi mdi-plus\"></i>\n        {{ id ? 'Salvar edição' : 'Adicionar' }}\n    </button>\n</div>\n\n<form class=\"common-form  padding\" [formGroup]=\"formGroup\" (submit)=\"submit()\">\n    <div class=\"common-form-max\" fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Nome do Banner</mat-label>\n            <input matInput required formControlName=\"name\"/>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Slug (inserção no código)</mat-label>\n            <input matInput required formControlName=\"slug\"/>\n        </mat-form-field>\n\n        <button mat-button type=\"button\" (click)=\"addBanner()\">Adicionar Banner</button>\n\n        <div fxFlex>\n            <div class=\"padding\" *ngFor=\"let banner of banners.controls; let i = index\" [formGroup]=\"banners.controls[i]\" fxLayout=\"column\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Nome</mat-label>\n                    <input matInput required formControlName=\"name\"/>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Conteúdo</mat-label>\n                    <textarea matInput required formControlName=\"content\"></textarea>\n                </mat-form-field>\n                <app-file-upload type=\"App\\Models\\Banner\" [id]=\"banner.value.id\" [token]=\"this.token\" [multiple]=\"false\"\n                                 (uploaded)=\"fileUploaded(i, $event)\">\n                </app-file-upload>\n                <button mat-icon-button type=\"button\" (click)=\"removeBanner(i)\"><i class=\"mdi mdi-trash-can\"></i> Remover banner</button>\n                <mat-divider></mat-divider>\n            </div>\n        </div>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {BannersComponent} from \"./banners.component\";\nimport {AddEditComponent} from \"./add-edit/add-edit.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: BannersComponent,\n\t},\n\t{\n\t\tpath: 'add',\n\t\tcomponent: AddEditComponent,\n\t},\n\t{\n\t\tpath: 'edit/:id',\n\t\tcomponent: AddEditComponent,\n\t}\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class BannersRoutingModule { }\n","<mat-progress-bar class=\"progress\" *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n\n<div fxLayout=\"column\">\n    <div fxLayoutAlign=\"space-between center\">\n        <h1 class=\"margin-right\">Banners</h1>\n        <button color=\"primary\" mat-flat-button routerLink=\"add\">\n            <i class=\"mdi mdi-plus\"></i> Adicionar\n        </button>\n    </div>\n    <table fxFlex mat-table [dataSource]=\"dataSource\"\n           matSort matSortActive=\"id\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef width=\"50px\">#</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n        </ng-container>\n\n        <!-- Title Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nome</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell *matHeaderCellDef>Slug</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.slug}}</td>\n        </ng-container>\n\n        <!-- Title Column -->\n        <ng-container matColumnDef=\"actions\" stickyEnd>\n            <th mat-header-cell *matHeaderCellDef class=\"actions\">Ações</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <button mat-button color=\"primary\" [routerLink]=\"'edit/' + row.id\">\n                    <mat-icon inline class=\"small\">edit</mat-icon>\n                    Editar\n                </button>\n                <button mat-button color=\"warn\" (click)=\"deleteConfirm(row)\">\n                    <mat-icon inline class=\"small\">remove_circle_outline</mat-icon>\n                    Remover\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator pageSize=\"10\"\n                   [pageIndex]=\"page\"\n                   [length]=\"total\"\n                   (page)=\"pageChange($event)\"></mat-paginator>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AlertService} from '../../../services/alert/alert.service';\nimport {ICategory} from '../../../interfaces/ICategory';\nimport {BannerService} from '../../../services/auth/banner/banner.service';\nimport {IBannerCategory} from '../../../interfaces/IBanner';\n\n@Component({\n  selector: 'app-banners',\n  templateUrl: './banners.component.html',\n  styleUrls: ['./banners.component.scss']\n})\nexport class BannersComponent implements OnInit {\n    public displayedColumns: Array<string> = ['id', 'name', 'actions'];\n    public loading: boolean = true;\n    public dataSource: Array<IBannerCategory>;\n    public page: number = 0;\n    public total: number;\n    constructor(\n        private bannerService: BannerService,\n        private alertService: AlertService,\n    ) { }\n\n    ngOnInit(): void {\n        this.getAll();\n    }\n\n    public getAll() {\n        this.loading = true;\n        this.bannerService\n            .getAll(this.page+1)\n            .subscribe((response) => {\n                this.dataSource = response.data;\n                this.total = response.total;\n            })\n            .add(() => this.loading = false);\n    }\n\n    private delete(row) {\n        this.loading = true;\n        this.bannerService\n            .delete(row.id)\n            .subscribe((response) => {\n                this.getAll();\n                this.alertService.toast(response.message);\n            })\n            .add(() => this.loading = false);\n    }\n\n    public pageChange(event: any) {\n        this.page = event.pageIndex;\n        this.getAll();\n    }\n\n    public deleteConfirm(row: ICategory) {\n        this.alertService.confirm(\"Deseja remover o registro?\", \"Remover\")\n          .subscribe((response) => {\n              if(response) {\n                  this.delete(row);\n              }\n          })\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BannersComponent} from \"./banners.component\";\nimport {BannersRoutingModule} from \"./banners-routing.module\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatBadgeModule} from \"@angular/material/badge\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {AddEditComponent} from './add-edit/add-edit.component';\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {AddressModule} from \"../share/address/address.module\";\nimport {ContactModule} from \"../share/contact/contact.module\";\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {NgxMaskModule} from 'ngx-mask';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search';\nimport {ProductsModule} from '../products/products.module';\n\n@NgModule({\n\tdeclarations: [\n\t\tBannersComponent,\n\t\tAddEditComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tBannersRoutingModule,\n\t\tFlexModule,\n\t\tMatExpansionModule,\n\t\tMatBadgeModule,\n\t\tMatProgressBarModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatIconModule,\n\t\tMatSlideToggleModule,\n\t\tMatListModule,\n\t\tMatTabsModule,\n\t\tMatOptionModule,\n\t\tMatSelectModule,\n\t\tMatTableModule,\n\t\tMatSortModule,\n\t\tAddressModule,\n\t\tContactModule,\n\t\tMatPaginatorModule,\n\t\tNgxMaskModule,\n\t\tMatTooltipModule,\n\t\tMatAutocompleteModule,\n\t\tNgxMatSelectSearchModule,\n\t\tProductsModule,\n\t\tFormsModule,\n\t]\n})\nexport class BannersModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {IResponse, IResponseData} from '../../../interfaces/IResponse';\nimport {environment} from \"../../../../environments/environment\";\nimport {IState} from '../../../interfaces/IState';\nimport {IBannerCategory} from '../../../interfaces/IBanner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BannerService {\n    constructor(private httpClient: HttpClient) { }\n    public getAll(page?: number): Observable<IResponseData<IBannerCategory>> {\n        let httpParams = new HttpParams();\n        if (page) {\n            httpParams = httpParams.append('page', page.toString());\n        }\n        return this.httpClient.get<IResponseData<IBannerCategory>>(environment.baseAuthUrl + '/banners/get-all', {\n            params: httpParams\n        });\n    }\n\n    public update(data: IBannerCategory): Observable<IResponse<IBannerCategory>> {\n        return this.httpClient.put<IResponse<IBannerCategory>>(environment.baseAuthUrl + '/banners/update/' + data.id, data);\n    }\n\n    public store(data: IBannerCategory): Observable<IResponse<IBannerCategory>> {\n        return this.httpClient.post<IResponse<IBannerCategory>>(environment.baseAuthUrl + '/banners/store', data);\n    }\n\n    public dataprovider(): Observable<IDataprovider> {\n        return this.httpClient.get<IDataprovider>(environment.baseAuthUrl + '/banners/dataprovider/', {});\n    }\n\n    public get(id: number): Observable<IBannerCategory> {\n        return this.httpClient.get<IBannerCategory>(environment.baseAuthUrl + '/banners/get/' + id, {});\n    }\n\n    public delete(id: number): Observable<IResponse<IBannerCategory>> {\n        return this.httpClient.delete<IResponse<IBannerCategory>>(environment.baseAuthUrl + '/banners/delete/' + id, {});\n    }\n}\n\ninterface IDataprovider {\n    states: Array<IState>;\n}\n"],"sourceRoot":"webpack:///"}