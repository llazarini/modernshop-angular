{"version":3,"sources":["./src/app/pages/auth/share/address/address.component.ts","./src/app/pages/auth/share/address/address.component.html","./src/app/pages/auth/share/address/address.module.ts","./src/app/pages/auth/share/contact/contact.component.ts","./src/app/pages/auth/share/contact/contact.component.html","./src/app/pages/auth/share/contact/contact.module.ts","./src/app/services/auth/address/address.service.ts","./src/app/services/auth/state/state.service.ts"],"names":[],"mappings":"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","file":"550.js","sourcesContent":["import {Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {IState} from '../../../../interfaces/IState';\nimport {ICity} from '../../../../interfaces/ICity';\nimport {StateService} from '../../../../services/auth/state/state.service';\nimport {AddressService} from '../../../../services/auth/address/address.service';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss']\n})\nexport class AddressComponent implements OnInit {\n    @Output()\n    private removeEvent = new EventEmitter<number>();\n    @Input()\n    public formGroup: FormGroup;\n    @Input()\n    public index: number = 0;\n    @Input()\n    public states: Array<IState>;\n    public cities: Array<ICity>;\n    public loading: boolean = false;\n    public searchCity: string = '';\n\n    constructor(\n        private stateService: StateService,\n        private addressService: AddressService\n    ) { }\n\n    ngOnInit(): void {\n        if (this.formGroup?.value?.state_id) {\n            this.stateChanged();\n        }\n    }\n\n    public stateChanged()\n    {\n        this.loading = true;\n        this.stateService\n            .getAllCities(this.formGroup.value?.state_id)\n            .subscribe((response) => {\n                this.cities = response;\n            })\n            .add(() => this.loading = false)\n    }\n\n\tpublic searchPostalCode() {\n        if (this.formGroup.value.zip_code?.length !== 8 || this.loading) {\n            return;\n        }\n        this.loading = true;\n        this.addressService\n            .postalCode(this.formGroup.value.zip_code)\n            .subscribe((response) => {\n                this.formGroup.patchValue(response)\n                this.stateChanged();\n            })\n            .add(() => this.loading = false)\n\t}\n\n\tpublic cityName(item: any) {\n\t\treturn item.name;\n\t}\n\n    public getCities() {\n        if (!this.cities) {\n            return [];\n        }\n        return this.cities\n            .filter(city => city.name.toLowerCase()\n                .indexOf(this.searchCity.toLowerCase()) >= 0)\n    }\n}\n","\n<mat-progress-bar class=\"progress\" *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n\n<div fxFlex fxLayout=\"column\" [formGroup]=\"formGroup\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-form-field fxFlex appearance=\"outline\">\n            <mat-label>CEP</mat-label>\n            <input matInput (ngModelChange)=\"searchPostalCode()\" formControlName=\"zip_code\">\n        </mat-form-field>\n        <div>\n            <button mat-button color=\"primary\" type=\"button\" (click)=\"searchPostalCode()\">\n                <i class=\"mdi mdi-find-replace\"></i>\n                Buscar\n            </button>\n        </div>\n    </div>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Endereço</mat-label>\n        <input matInput formControlName=\"address\">\n    </mat-form-field>\n\n    <div fxLayout=\"row\">\n        <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Número</mat-label>\n            <input matInput formControlName=\"number\">\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" fxFlex=\"80px\" class=\"margin-left\">\n            <mat-label>Complemento</mat-label>\n            <input matInput formControlName=\"complement\">\n        </mat-form-field>\n    </div>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Bairro</mat-label>\n        <input matInput formControlName=\"neighborhood\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Estado</mat-label>\n        <mat-select formControlName=\"state_id\" (ngModelChange)=\"stateChanged()\">\n          <mat-option *ngFor=\"let state of states\" [value]=\"state.id\">{{ state.name }}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Cidade</mat-label>\n\n        <mat-select formControlName=\"city_id\" placeholder=\"Cidade\">\n            <mat-option>\n                <ngx-mat-select-search [(ngModel)]=\"searchCity\"\n                                       [ngModelOptions]=\"{standalone: true}\"\n                                       noEntriesFoundLabel=\"Nenhuma cidade encontrada\"\n                                       placeholderLabel=\"Busque a cidade\"\n                ></ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let city of getCities()\" [value]=\"city.id\">{{ city.name }}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AddressComponent} from \"./address.component\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search';\n\n\n\n@NgModule({\n  declarations: [\n    AddressComponent\n  ],\n  exports: [\n    AddressComponent\n  ],\n\timports: [\n\t\tCommonModule,\n\t\tFlexModule,\n\t\tMatListModule,\n\t\tMatIconModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tReactiveFormsModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatProgressBarModule,\n\t\tMatAutocompleteModule,\n\t\tNgxMatSelectSearchModule,\n\t\tFormsModule\n\t]\n})\nexport class AddressModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n  @Output()\n  private removeEvent = new EventEmitter<number>();\n  @Input()\n  public formGroup: FormGroup;\n  @Input()\n  public index: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {}\n}\n","<div fxLayout=\"column\" [formGroup]=\"formGroup\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Nome</mat-label>\n    <input matInput required formControlName=\"name\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>E-mail</mat-label>\n    <input matInput formControlName=\"email\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Telefone</mat-label>\n    <input matInput mask=\"(00) 0000-00000\" formControlName=\"phone\">\n  </mat-form-field>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ContactComponent} from \"./contact.component\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxMaskModule} from 'ngx-mask';\n\n\n\n@NgModule({\n  declarations: [\n    ContactComponent\n  ],\n  exports: [\n    ContactComponent\n  ],\n\timports: [\n\t\tCommonModule,\n\t\tFlexModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tReactiveFormsModule,\n\t\tNgxMaskModule\n\t]\n})\nexport class ContactModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService {\n    constructor(private httpClient: HttpClient) { }\n\n    public postalCode(postalCode: string): Observable<any> {\n        let params = new HttpParams();\n        params = params.append('zip_code', postalCode)\n        return this.httpClient.get<any>(environment.baseAuthUrl + '/address/zip_code/', {\n            params\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../../environments/environment\";\nimport {ICity} from '../../../interfaces/ICity';\nimport {IState} from '../../../interfaces/IState';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n    constructor(private httpClient: HttpClient) { }\n\n    public getAllCities(stateId?: number): Observable<Array<ICity>> {\n        let httpParams = new HttpParams();\n        if (stateId) {\n            httpParams = httpParams.append('state_id', stateId.toString());\n        }\n        return this.httpClient.get<Array<ICity>>(environment.baseAuthUrl + '/states/get-cities', {\n            params: httpParams\n        });\n    }\n\n    public states() : Observable<Array<IState>>{\n        return this.httpClient.get<Array<IState>>(environment.baseAuthUrl + '/states/get-all');\n    }\n}\n"],"sourceRoot":"webpack:///"}